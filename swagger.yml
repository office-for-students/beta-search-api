openapi: 3.0.0
info:
  title: Search API
  description: "API provides access to searching courses"
  version: 1.0.0
  license:
    name: ""
    url: ""
paths:
  /search/CourseSearchAPIHttpTrigger:
    get:
      summary: "Returns a list of people"
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/course_query'
        - $ref: '#/components/parameters/institution_query'
        - $ref: '#/components/parameters/filters'
        - $ref: '#/components/parameters/countries'
        - $ref: '#/components/parameters/institutions'
        - $ref: '#/components/parameters/subjects'
        - $ref: '#/components/parameters/postcode'
        - $ref: '#/components/parameters/language'
      responses:
        200:
          description: "Returns a list of all relevant courses based on the query term and filters and grouped by institution/course provider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institutionCourses'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        500:
          $ref: '#/components/responses/InternalError'
  /search/institutions:
    get:
      summary: "Returns a list of people"
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/course_query'
        - $ref: '#/components/parameters/institution_query'
        - $ref: '#/components/parameters/filters'
        - $ref: '#/components/parameters/countries'
        - $ref: '#/components/parameters/institutions'
        - $ref: '#/components/parameters/subjects'
        - $ref: '#/components/parameters/postcode'
      responses:
        200:
          description: "Returns a list of all institutions whereby the query term and filters matched at least one course from each institution/course provider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institution_list'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        500:
          $ref: '#/components/responses/InternalError'
  /search/courses-by-institution:
    get:
      summary: "Returns a list of people"
      parameters:
        - $ref: '#/components/parameters/institution'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/course_query'
        - $ref: '#/components/parameters/filters'
        - $ref: '#/components/parameters/countries'
        - $ref: '#/components/parameters/subjects'
        - $ref: '#/components/parameters/postcode'
        - $ref: '#/components/parameters/language'
      responses:
        200:
          description: "Returns a list of all relevant courses based on the query term and filters for a single institution/course provider."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pubUkprnName'
                  - $ref: '#/components/schemas/coursesWithoutInstitutionObject'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        500:
          $ref: '#/components/responses/InternalError'
components:
  schemas:
    institutionCourses:
      description: "A list of course search results; list is returned by relevance of query term, if the scoring for multiple course documents is the same than the courses are sorted alphabetically."
      required: [
        items
        limit
        number_of_items
        offset
        total_results
      ]
      type: object
      properties:
        items:
          $ref: '#/components/schemas/institutions'
        limit:
          description: "The number of search items returned per page."
          type: integer
        number_of_items:
          description: "The number of items returned in items array. Increase the limit to return more items up to a maximum of 1000, (default is 20)."
          type: integer
          maximum: 1000
          minimum: 0
        offset:
          description: "The number of items skipped before starting to collect the result set."
          type: integer
        total_number_of_courses:
          description: "The total number of courses found based on search query."
          type: integer
        total_results:
          description: "The total number of institutions found with relevant courses matching search query."
          type: integer
    institutions:
      description: "A list of institutions containing a list of courses that were returned for search query."
      type: array
      items:
        allOf:
         - $ref: '#/components/schemas/institution'
         - $ref: '#/components/schemas/coursesWithoutInstitutionObject'
    coursesWithoutInstitutionObject:
      type: object
      required: [
        courses
        number_of_courses
      ]
      properties:
        courses:
          description: "A list of courses found relevant to search query and associated with institution/course provider."
          type: array
          items:
            $ref: '#/components/schemas/courseWithoutInstitutionObject'
        number_of_courses:
          description: "The number of courses found relevant to search query and associated with institution/course provider."
          type: integer
    courseWithoutInstitutionObject:
        $ref: '#/components/schemas/course'
    course:
      description: "The course information"
      required: [
        country
        distance_learning
        foundation_year
        honours_award
        kis_course_id
        length_of_course
        mode
        qualificatuon
        sandwich_year
        title
        year_abroad
      ]
      type: object
      properties:
        country:
          description: "The Country of provider for course."
          type: string
          enum: [
            England
            Northern Ireland
            Scotland
            Wales
          ]
        distance_learning:
          description: "The code representing whether the course is offered wholly through distance learning."
          type: string
        foundation_year:
          description: "The availability of a foundation year."
          type: string
        honours_award: 
          description: "Describes whether the course aim, on successful completion, would result in an honours (Hons) degree."
          type: string
        kis_course_id:
          description: "An identifier which uniquely identifies a course within a provider."
          type: string
        length_of_course:
          description: "The total number of stages for the course."
          type: string
        locations:
          description: "A list of teaching location that the course is taught at."
          type: array
          items:
            $ref: '#/components/schemas/location'
        mode:
          description: "Indicator to represent if a course is advertised as full-time, part-time or both."
          type: string
        qualification:
          $ref: '#/components/schemas/qualification'
        sandwich_year:
          description: "The availability of a sandwich year/work placement."
          type: string
        subjects:
          description: "A list of subjects that the course relates too."
          type: array
          items:
            $ref: '#/components/schemas/subject'
        title:
          description: "The title given to course by institution."
          required: [
            english
          ]
          type: object
          properties:
            english:
              description: "An english version of the title given by institution. Also known as 'TITLE' across other available data sources."
              type: string
            welsh:
              description: "A welsh version of the title given by institution. Also known as 'TITLEW' across other available data sources."
              type: string
        year_abroad:
          description: "The availability of a year abroad."
          type: string
    institution:
      description: "An object containing information on the teaching UK provider."
      required: [
        pub_ukprn_name,
        pub_ukprn
      ]
      type: object
      properties:
        pub_ukprn_name:
          description: "The name of the publication UK provider for where the course is primarily taught."
          type: string
        pub_ukprn:
          description: "Publication UK provider reference number for where the course is primarily taught. Known as 'PUBUKPRN' across csvs."
          type: string
    location:
      description: "Sub document containing information on course location."
      required: [
        english
      ]
      type: object
      properties:
        english:
          description: "The english name for teaching location."
          type: string
        welsh:
          description: "The welsh name for teaching location."
          type: string
    qualification:
      description: "The short name (alias) of the course qualification."
      type: string
      example: "BSc"
    subject:
      description: "Sub document containing information on subject."
      required: [
        code
        english
        level
      ]
      type: object
      properties:
        code:
          description: "The code that uniquely identifies subject."
          type: string
          example: "CAH09"
        english:
          description: "The english name for subject."
          type: string
        level:
          description: "The hierarchy (also known as aggregation) level of subject."
          type: integer
          enum: [
            1,
            2,
            3
          ]
        welsh:
          description: "The welsh name for subject."
          type: string
    institution_list:
      description: "A list of institutions which have at least 1 course that comply with the search query."
      type: object
      properties:
        limit:
          description: "The number of search items returned per page."
          type: integer
        number_of_items:
          description: "The number of items returned in items array. Increase the limit to return more items up to a maximum of 1000, (default is 20)."
          type: integer
        offset:
          description: "The number of items skipped before starting to collect the result set."
          type: integer
        total_number_of_courses:
          description: "The total number of courses found based on search query."
          type: integer
        total_results:
          description: "The total number of institutions found with relevant courses matching search query."
          type: integer
        items:
          description: "A list of institutions that were returned containing courses that comply with search query."
          type: array
          items:
            type: object
            properties:
              pub_ukprn_name:
                description: "The name of the publication UK provider for where the course is primarily taught."
                type: string
              number_of_courses:
                description: "The number of courses found relevant to search query and associated with institution/course provider."
                type: integer
    pubUkprnName:
      type: object
      properties:
        pub_ukprn_name:
          description: "The name of the publication UK provider for where the course/courses is/are primarily taught."
          type: string
    errorResponse:
      description: "The error response body, contains specific details of why the request failed"
      type: object
      required: [
        errors
      ]
      properties:
        errors:
          description: "A list of errors found for request"
          type: array
          required: [
            error
          ]
          items:
            type: object
            properties:
              error:
                description: "An error being returned for request"
                type: string
              error_values:
                description: "A collection of request key/value pairs which resulted in error."
                type: array
                items:
                  type: object
                  properties:
                    <key>:
                      description: "The value of the property that caused the error."
                      type: string
  parameters:
    limit:
      description: "The number of items to return"
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 20
    offset:
      description: "The number of items to skip before starting to collect the result set"
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    postcode:
      description: "The postcode search query term. It should contain a postcode and distance (in miles) separated by a comma"
      in: query
      name: postcode
      required: false
      example: "CF5 2BG,25"
      schema:
        type: string
    course_query:
      description: "The course search query term"
      in: query
      name: qc
      required: false
      schema:
        type: string
    institution_query:
      description: "The institution search query term"
      in: query
      name: qi
      required: false
      schema:
        type: string
    institution:
      description: "An institution (pub_ukprn_name) to filter on. Only institutions which directly match the stored values will be returned."
      in: query
      name: institution
      required: true
      schema:
        type: string
    countries:
      description: |
        A comma separated list of countries' to filter by. Only the following enumerations are filterable (case insensitive):
          * england
          * northern_ireland
          * wales
          * scotland
        
        If an enumerated value in the list has a prefixed character of '-', this operator represents the 'countries' must not be equal to value next to the operators
      example: "Wales,-northern_ireland"
      in: query
      name: countries
      required: false
      schema:
        type: string
    institutions:
      description: |
        A comma separated list of institutions' to filter by. Only institutions which directly match the stored values will be returned ignoring casing
      example: "Didsbury Manchester,Roehampton University"
      in: query
      name: institutions
      required: false
      schema:
        type: string
    subjects:
      description: |
        A comma separated list of subjects' to filter by. Only subject codes which directly match the stored values will be returned ignoring casing
      example: "CAH09-01-01,cah11-01-01"
      in: query
      name: subjects
      required: false
      schema:
        type: string
    language:
      description: |
        A value representing the language the request was made in. Used for course sorting based on available title. Only the following enumerations are supported langauges:
          * en - English
          * cy - Welsh
      example: "en"
      in: query
      name: language
      required: false
      schema:
        type: string
    filters:
      description: |
        A comma separated list of filters' to filter all courses by. Only the following enumerations are filterable (case insensitive):
          * part_time
          * full_time
          * distance_learning
          * honours_award
          * foundation_year
          * length_of_course
          * sandwich_year
          * year_abroad
        
        If an enumerated value in the list has a prefixed character of '-', this operator represents the 'filter' must not be equal to value next to the operators
      example: "Part_time,-sandwich_year"
      in: query
      name: filters
      required: false
      schema:
        type: string
  responses:
    ConflictError:
      description: "Failed to process the request due to a conflict"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    ForbiddenError:
      description: "The request is forbidden"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    InternalError:
      description: "Failed to process the request due to an internal error"
    InvalidRequestError:
      description: "Failed to process the request due to invalid request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    ResourceNotFound:
      description: "The resource was not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    UnauthorisedError:
      description: "The token provided is unauthorised to carry out this operation"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
